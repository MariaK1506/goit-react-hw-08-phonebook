{"version":3,"file":"static/js/50.a4396c25.chunk.js","mappings":"uRAOe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,QAAQ,KACRC,cAAY,EACZC,GAAI,CACFC,UAAW,SACXC,UAAW,QALf,gCAUA,UAAC,IAAD,CACEC,UAAU,OACVH,GAAI,CACFI,MAAO,QACPC,YAAa,OACbC,WAAY,QAEdC,SA3Be,SAAAC,GACnBA,EAAMC,iBACNvB,EAASwB,EAAAA,EAAAA,SAAwB,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAeV,WASE,SAAC,IAAD,CACEiB,MAAM,OACNb,QAAQ,WACRE,GAAI,CACFE,UAAW,OACXE,MAAO,QAETP,MAAOR,EACPuB,SAAUjB,EACVkB,KAAK,OACLxB,KAAK,OACLyB,UAAQ,KAGV,SAAC,IAAD,CACEH,MAAM,QACNb,QAAQ,WACRE,GAAI,CACFE,UAAW,OACXE,MAAO,QAETP,MAAON,EACPqB,SAAUjB,EACVkB,KAAK,QACLxB,KAAK,QACLyB,UAAQ,KAGV,SAAC,IAAD,CACEH,MAAM,WACNb,QAAQ,WACRE,GAAI,CACFE,UAAW,OACXE,MAAO,QAETP,MAAOJ,EACPmB,SAAUjB,EACVkB,KAAK,WACLxB,KAAK,WACLyB,UAAQ,KAGV,SAAC,IAAD,CACEhB,QAAQ,YACRiB,KAAK,QACLf,GAAI,CACFE,UAAW,QAEbW,KAAK,SANP","sources":["pages/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport { Container } from 'components/Container/Container';\n\nimport { Box, TextField, Button, Typography } from '@mui/material';\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h3\"\n        gutterBottom\n        sx={{\n          textAlign: 'center',\n          marginTop: '20px',\n        }}\n      >\n        Registration form\n      </Typography>\n      <Box\n        component=\"form\"\n        sx={{\n          width: '400px',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          sx={{\n            marginTop: '10px',\n            width: '100%',\n          }}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          required\n        />\n\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          sx={{\n            marginTop: '10px',\n            width: '100%',\n          }}\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          required\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          sx={{\n            marginTop: '10px',\n            width: '100%',\n          }}\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          required\n        />\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            marginTop: '10px',\n          }}\n          type=\"submit\"\n        >\n          Register\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","variant","gutterBottom","sx","textAlign","marginTop","component","width","marginRight","marginLeft","onSubmit","event","preventDefault","authOperations","label","onChange","type","required","size"],"sourceRoot":""}